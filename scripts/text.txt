Day 1:

* Read Assignment Brief

Day 2:

* Setup Cotiss Directory, IAM account and Billing Alerts

Day 3:   

*** Static Website Steps ***

1) Create Resource Group
2) Create a VM (in zone 1)
4) Install nginx
5) Open Ports
3) Connect via ssh (https://askubuntu.com/questions/311558/ssh-permission-denied-publickey) 
6) Edit default page
6) Destroy Resouce group


az group create --name cotiss-website --location eastus

az vm create --resource-group cotiss-website --name vm-a --image Debian --admin-username azureuser --generate-ssh-keys --zone 1

az vm run-command invoke -resource-group cotiss-website --name vm-a --command-id RunShellScript  --scripts "sudo apt-get update && sudo apt-get install -y nginx"

az vm open-port --port 80 --resource-group cotiss-website --name vm-a

ssh -i ~/.ssh/id_rsa azureuser@20.127.244.211

sudo -s 

nano /var/www/html/index.nginx-debian.html # Then I just cross out everything and write "Website Coming Soon"

ctrl + d # close ssh connection


*** VM Snapshot Steps ***

az vm show -g cotiss-website -n vm-a

# Get managed disc id: /subscriptions/32c611dd-f2a6-4ceb-b69c-580b687754c3/resourceGroups/cotiss-website/providers/Microsoft.Compute/disks/vm-a_OsDisk_1_92b3be6b61484e21bc958f72a61132b3

az snapshot create -g cotiss-website --source "/subscriptions/32c611dd-f2a6-4ceb-b69c-580b687754c3/resourceGroups/cotiss-website/providers/Microsoft.Compute/disks/vm-a_OsDisk_1_92b3be6b61484e21bc958f72a61132b3" --name static-website-backup

az snapshot list -g cotiss-website -o table

# Create disc from snapshot:

az disk create --resource-group cotiss-website --name vm-b-disc --sku Standard_LRS --size-gb 32 --source '/subscriptions/32c611dd-f2a6-4ceb-b69c-580b687754c3/resourceGroups/cotiss-website/providers/Microsoft.Compute/disks/vm-a_OsDisk_1_92b3be6b61484e21bc958f72a61132b3'


az vm create --name vm-b --resource-group cotiss-website --attach-os-disk vm-b-disc --os-type linux

az vm open-port --port 80 --resource-group cotiss-website --name vm-b

# I can now view the website using either VM -> Part 3 Completed...

az group delete --name cotiss-website


Day 4:

# Create a simple VNet

az network vnet create --resource-group cotiss-website --location eastus --name vnet --address-prefixes 10.1.0.0/16 --subnet-name mybackend --subnet-prefixes 10.1.0.0/24

# Create a simple public IP

az network public-ip create --resource-group cotiss-website --name publicIP --sku Standard --zone 1 2 3


# Creating a simple load balancer

az network lb create --resource-group cotiss-website --name myLoadBalancer --sku Standard --public-ip-address public-ip --frontend-ip-name myFrontEnd --backend-pool-name myBackEndPool

# Create Health Probe

az network lb probe create --resource-group cotiss-website --lb-name myLoadBalancer --name myHealthProbe --protocol tcp --port 80

# Create load balancer rules
az network lb rule create -g cotiss-website --lb-name myLoadBalancer --name myHTTPRule --protocol tcp --frontend-port 80 --backend-port 80 --frontend-ip-name myFrontEnd --backend-pool-name myBackEndPool --probe-name myHealthProbe --disable-outbound-snat true --idle-timeout 15 --enable-tcp-reset true

# Create network interfaces
az network nsg create --resource-group cotiss-website --name myNSG

# Create network security group rule
az network nsg rule create --resource-group cotiss-website --nsg-name myNSG --name myNSGRuleHTTP --protocol '*' --direction inbound --source-address-prefix '*' --source-port-range '*' --destination-address-prefix '*' --destination-port-range 80 --access allow --priority 200


# bastion subnet , used by bastion host to access the VN
az network vnet subnet create --resource-group cotiss-website  --name AzureBastionSubnet --vnet-name vnet --address-prefixes 10.1.1.0/27

# create bastion host
az network bastion create --resource-group cotiss-website --name myBastionHost --public-ip-address publicIP --vnet-name vnet --location eastus 

# create network interfaces


array=(vm-a vm-b)
  for vmnic in "${array[@]}"
  do
    az network nic create \
        --resource-group cotiss-website \
        --name $vmnic \
        --vnet-name vnet \
        --subnet mybackend \
        --network-security-group myNSG
  done





